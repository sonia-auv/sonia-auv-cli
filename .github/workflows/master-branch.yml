name: Unit Test And Deploy - Master Branch

on:
  push:
    branches: [master]

jobs:
  build-and-test:
    name: "Build and Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm test

  publish-npm:
    name: "Publish to NPM"
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  create-release:
    name: "Create Github Release"
    runs-on: ubuntu-latest
    needs: [build-and-test, publish-npm]
    steps:
      - uses: actions/checkout@v2
      - name: Set Target version
        run: echo '::set-env name=TARGET_VERSION::'node -pe "require('./package.json').version"
      - name: Create Git Tag
        run: |
          git tag ${TARGET_VERSION}
          git push origin --tags

      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TARGET_VERSION }}
          release_name: Release ${{ env.TARGET_VERSION }}
          body: |
            A new release for this package has been created
          draft: false
          prerelease: false

  notify-success:
    name: "Notify Slack - Success"
    runs-on: ubuntu-latest
    needs: [build-and-test, publish-npm, create-release]
    if: success()
    steps:
      - name: Notify Slack Success
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: github-ci-notifications
          status: SUCCESS
          color: good

  notify-fail:
    name: "Notify Slack - Failure"
    runs-on: ubuntu-latest
    needs: [build-and-test, publish-npm, create-release]
    if: failure()
    steps:
      - name: Notify Slack Fail
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: github-ci-notifications
          status: FAILED
          color: danger
